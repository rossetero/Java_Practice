/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;


import java.util.Arrays;
import java.util.Locale;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        double[][] points = new double[3][2];
        Scanner input = new Scanner(System.in);
        input.useLocale(Locale.ENGLISH);
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 2; j++) {
                try {
                    points[i][j] = Double.parseDouble(input.nextLine());
                } catch (NumberFormatException ex) {
                    System.out.println("Couldn't parse a number. Please, try again");
                    --j;
                }
            }
        }
        try {
            double sum = findPerimeter(points);
            System.out.printf("Perimeter: %.3f", sum);
        } catch (Exception e) {
            System.out.println(e.getMessage());

        }

    }

    static double findPerimeter(double[][] p) throws Exception {
        double[] sidesLengths = new double[3];
        double sum = -1;
        sidesLengths[0] = Math.sqrt((p[0][0] - p[1][0]) * (p[0][0] - p[1][0]) + (p[0][1] - p[1][1]) * (p[0][1] - p[1][1]));
        sidesLengths[1] = Math.sqrt((p[1][0] - p[2][0]) * (p[1][0] - p[2][0]) + (p[1][1] - p[2][1]) * (p[1][1] - p[2][1]));
        sidesLengths[2] = Math.sqrt((p[2][0] - p[0][0]) * (p[2][0] - p[0][0]) + (p[2][1] - p[0][1]) * (p[2][1] - p[0][1]));
        if (sidesLengths[0] < sidesLengths[1] + sidesLengths[2] && sidesLengths[1] < sidesLengths[0] + sidesLengths[2] && sidesLengths[2] < sidesLengths[0] + sidesLengths[1]) {
            sum = sidesLengths[0] + sidesLengths[1] + sidesLengths[2];
        } else {
            throw new Exception("It isn't triangle");
        }
        return sum;

    }

}
